<Page x:Name="Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:ModernKeePass.Converters" 
    xmlns:local="using:ModernKeePass.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:actions="using:ModernKeePass.Actions"
    xmlns:controls="using:ModernKeePass.Views.UserControls"
    x:Class="ModernKeePass.Views.EntryDetailPage"
    mc:Ignorable="d"
    SizeChanged="EntryDetailPage_OnSizeChanged"
    DataContext="{Binding Source={StaticResource Locator}, Path=Entry}">
    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource MenuHeightGridLength}"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
                <Hub x:Name="Hub" Padding="0">
                    <Hub.Resources>
                        <Style TargetType="TextBlock" x:Key="EntryTextBlockStyle">
                            <Setter Property="Margin" Value="0,20,0,0"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </Hub.Resources>
                    <HubSection x:Uid="EntryHubMain">
                        <DataTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <StackPanel Width="350" Margin="0,0,25,0">
                                    <StackPanel.Resources>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Margin" Value="0,20,0,0"/>
                                            <Setter Property="FontSize" Value="18"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock x:Uid="EntryLogin" Style="{StaticResource EntryTextBlockStyle}" />
                                    <local:TextBoxWithButton x:Uid="LoginTextBox" Text="{Binding UserName, Mode=TwoWay}" Style="{StaticResource TextBoxWithButtonStyle}" ButtonContent="&#xE16F;" IsEnabled="{Binding IsCurrentEntry}">
                                        <interactivity:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="ButtonClick">
                                                <actions:ClipboardAction Text="{Binding UserName}" />
                                                <actions:ToastAction x:Uid="ToastCopyLogin" Title="{Binding Title}" />
                                            </core:EventTriggerBehavior>
                                        </interactivity:Interaction.Behaviors>
                                    </local:TextBoxWithButton>
                                    <TextBlock x:Uid="EntryPassword" Style="{StaticResource EntryTextBlockStyle}" />
                                    <controls:PasswordGenerationBox Password="{Binding Password, Mode=TwoWay}" IsEnabled="{Binding IsCurrentEntry}" />
                                    <TextBlock Text="URL" Style="{StaticResource EntryTextBlockStyle}"/>
                                    <local:TextBoxWithButton x:Uid="UrlTextBox" Text="{Binding Url, Mode=TwoWay}" Style="{StaticResource TextBoxWithButtonStyle}" ButtonContent="&#xE111;" IsEnabled="{Binding IsCurrentEntry}">
                                        <interactivity:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="ButtonClick">
                                                <actions:NavigateToUrlAction Url="{Binding Url}" />
                                            </core:EventTriggerBehavior>
                                        </interactivity:Interaction.Behaviors>
                                    </local:TextBoxWithButton>
                                    <TextBlock x:Uid="EntryNotes" Style="{StaticResource EntryTextBlockStyle}" />
                                    <TextBox TextWrapping="Wrap" Text="{Binding Notes, Mode=TwoWay}" Width="350" Height="200" AcceptsReturn="True" IsSpellCheckEnabled="True" IsEnabled="{Binding IsCurrentEntry}" />
                                    <CheckBox x:Uid="EntryExpirationDate" Margin="-3,0,0,0" IsChecked="{Binding HasExpirationDate, Mode=TwoWay}" IsEnabled="{Binding IsCurrentEntry}" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <SymbolIcon Grid.Column="0" Symbol="Important" Foreground="DarkRed" Visibility="{Binding HasExpired, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip x:Uid="EntryExpirationTooltip" />
                                            </ToolTipService.ToolTip>
                                        </SymbolIcon>
                                        <StackPanel Grid.Column="1" x:Name="ExpirationDatePanel" Orientation="Vertical" Visibility="{Binding HasExpirationDate, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <DatePicker Margin="10,5,20,0" Date="{Binding ExpiryDate, Mode=TwoWay}" />
                                            <TimePicker Margin="10,10,0,0" Time="{Binding ExpiryTime, Mode=TwoWay}" />
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Small">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpirationDatePanel" Storyboard.TargetProperty="Orientation">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Vertical"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Large">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpirationDatePanel" Storyboard.TargetProperty="Orientation">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Horizontal"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ScrollViewer>
                        </DataTemplate>
                    </HubSection>
                    <HubSection x:Uid="EntryHubPresentation">
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Uid="EntryIcon" Style="{StaticResource EntryTextBlockStyle}" />
                                <controls:SymbolPickerUserControl SelectedSymbol="{Binding Icon, Mode=TwoWay}" HorizontalAlignment="Left" IsEnabled="{Binding IsCurrentEntry}" />
                                <TextBlock x:Uid="EntryBackgroundColor" Style="{StaticResource EntryTextBlockStyle}" />
                                <controls:ColorPickerUserControl SelectedColor="{Binding BackgroundColor, Mode=TwoWay}" IsEnabled="{Binding IsCurrentEntry}" Width="250" />
                                <TextBlock x:Uid="EntryForegroundColor" Style="{StaticResource EntryTextBlockStyle}" />
                                <controls:ColorPickerUserControl SelectedColor="{Binding ForegroundColor, Mode=TwoWay}" IsEnabled="{Binding IsCurrentEntry}" Width="250" />
                            </StackPanel>
                        </DataTemplate>
                    </HubSection>
                    <HubSection x:Uid="EntryHubAdditional">
                        <DataTemplate>
                            <local:SelectableTemplateListView 
                                ItemsSource="{Binding AdditionalFields}"
                                SelectedIndex="{Binding AdditionalFieldSelectedIndex, Mode=TwoWay}"
                                ItemContainerStyle="{StaticResource ListViewLeftIndicatorItemExpanded}">
                                <local:SelectableTemplateListView.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical">
                                            <HyperlinkButton Command="{Binding Path=DataContext.AddAdditionalField, ElementName=Page}">
                                                <StackPanel Orientation="Horizontal">
                                                    <SymbolIcon Symbol="Add" />
                                                    <TextBlock x:Uid="EntryAddAdditionalField" VerticalAlignment="Center" Margin="10,0,0,0" />
                                                </StackPanel>
                                            </HyperlinkButton>
                                            <Border BorderBrush="DarkGray" BorderThickness="0,0,0,1" />
                                        </StackPanel>
                                    </DataTemplate>
                                </local:SelectableTemplateListView.HeaderTemplate>
                                <local:SelectableTemplateListView.SelectedItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBox Grid.Row="0" Text="{Binding Name, Mode=TwoWay}" Width="350"
                                                     IsEnabled="{Binding Path=DataContext.IsCurrentEntry, ElementName=Page}" />
                                            <TextBox Grid.Row="1" AcceptsReturn="True" Height="100" TextWrapping="Wrap" Width="350"  Margin="0,5,0,0"
                                                     Text="{Binding Value, Mode=TwoWay}"
                                                     IsEnabled="{Binding Path=DataContext.IsCurrentEntry, ElementName=Page}" />
                                            <ToggleSwitch Grid.Row="2" x:Uid="EntryEnableFieldProtection" HorizontalAlignment="Left" IsOn="{Binding IsProtected, Mode=TwoWay}" />
                                            <Button Grid.Row="2" x:Uid="EntryDeleteAdditionalField" HorizontalAlignment="Right" Margin="0,15,0,0" Command="{Binding Path=DataContext.DeleteAdditionalField, ElementName=Page}" CommandParameter="{Binding}" />
                                        </Grid>
                                    </DataTemplate>
                                </local:SelectableTemplateListView.SelectedItemTemplate>
                                <local:SelectableTemplateListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical" Margin="5">
                                            <TextBlock Text="{Binding Name}" Style="{StaticResource EntryTextBlockStyle}" FontWeight="SemiBold" />
                                            <TextBlock HorizontalAlignment="Left" MaxLines="3" FontSize="12" Margin="2,0,2,5" Text="{Binding DisplayValue}" Style="{StaticResource EntryTextBlockStyle}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </local:SelectableTemplateListView.ItemTemplate>
                            </local:SelectableTemplateListView>
                        </DataTemplate>
                    </HubSection>
                    <HubSection x:Uid="EntryHubAttachments" Foreground="{StaticResource HubSectionBrush}">
                        <DataTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Vertical">
                                    <HyperlinkButton Command="{Binding Path=DataContext.AddAttachmentCommand, ElementName=Page}">
                                        <StackPanel Orientation="Horizontal">
                                            <SymbolIcon Symbol="Attach" />
                                            <TextBlock x:Uid="EntryAddAttachment" VerticalAlignment="Center" Margin="10,0,0,0" />
                                        </StackPanel>
                                    </HyperlinkButton>
                                    <Border BorderBrush="DarkGray" BorderThickness="0,0,0,1" />
                                    <ItemsControl ItemsSource="{Binding Attachments}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <HyperlinkButton Content="{Binding Name}" Command="{Binding Path=DataContext.OpenAttachmentCommand, ElementName=Page}" CommandParameter="{Binding}" />
                                                    <HyperlinkButton Grid.Column="1" Margin="10,0,0,0" HorizontalAlignment="Right" Command="{Binding Path=DataContext.DeleteAttachmentCommand, ElementName=Page}" CommandParameter="{Binding}">
                                                        <SymbolIcon Symbol="Delete" />
                                                    </HyperlinkButton>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </ScrollViewer>
                        </DataTemplate>
                    </HubSection>
                </Hub>
            </Grid>
            <controls:HamburgerMenuUserControl 
                Grid.Column="0"
                x:Name="HamburgerMenu"
                x:Uid="HistoryLeftListView" 
                ItemsSource="{Binding History}" 
                SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" 
                SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
        </Grid>
        <!-- Bouton Précédent et titre de la page -->
        <Grid Grid.Row="0" Background="{ThemeResource AppBarBackgroundThemeBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource MenuWidthGridLength}"/>
                <ColumnDefinition Width="{StaticResource MenuWidthGridLength}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" 
                    Command="{Binding GoBackCommand}"
                    Height="{StaticResource MenuHeight}"
                    Width="{StaticResource MenuWidth}"
                    AutomationProperties.Name="Back"
                    AutomationProperties.AutomationId="BackButton"
                    AutomationProperties.ItemType="Navigation Button"
                    Style="{StaticResource NoBorderButtonStyle}">
                <SymbolIcon Symbol="Back" />
            </Button>
            <Button Grid.Column="1" 
                Height="{StaticResource MenuHeight}"
                Width="{StaticResource MenuWidth}"
                Command="{Binding GoToParentCommand}"
                Style="{StaticResource NoBorderButtonStyle}">
                <SymbolIcon Symbol="Up" />
                <ToolTipService.ToolTip>
                    <ToolTip Content="{Binding ParentGroupName}" />
                </ToolTipService.ToolTip>
            </Button>
            <Viewbox Grid.Column="2" MaxHeight="200">
                <SymbolIcon Symbol="{Binding Icon}" Width="100" Height="70"  />
            </Viewbox>
            <TextBox Grid.Column="3"
                x:Uid="EntryTitle"
                x:Name="TitleTextBox"
                Text="{Binding Title, Mode=TwoWay}" 
                Background="Transparent"
                IsHitTestVisible="{Binding IsEditMode}"
                FontSize="20"
                FontWeight="Light"
                TextWrapping="NoWrap" 
                VerticalAlignment="Center">
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding IsEditMode}" Value="True">
                        <actions:SetupFocusAction TargetObject="{Binding ElementName=TitleTextBox}" />
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=TitleTextBox}" PropertyName="BorderThickness" Value="2" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{Binding IsEditMode}" Value="False">
                        <core:ChangePropertyAction TargetObject="{Binding ElementName=TitleTextBox}" PropertyName="BorderThickness" Value="0" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </TextBox>
            <controls:TopMenuUserControl 
                x:Name="TopMenu" Grid.Column="4"
                IsEditButtonChecked="{Binding IsEditMode, Mode=TwoWay}"
                MoveButtonVisibility="{Binding IsCurrentEntry, Converter={StaticResource BooleanToVisibilityConverter}}"
                RestoreButtonVisibility="{Binding IsCurrentEntry, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                SaveCommand="{Binding SaveCommand}"
                MoveCommand="{Binding MoveCommand}"
                RestoreCommand="{Binding RestoreCommand}"
                DeleteCommand="{Binding DeleteCommand}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="EditButtonClick">
                        <actions:SetupFocusAction TargetObject="{Binding ElementName=TitleTextBox}"  />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:TopMenuUserControl>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PageLayout">
                <VisualState x:Name="Small">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Hub" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="-30,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Medium">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Hub" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Large">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Hub" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>